/* eslint-disable @next/next/no-img-element */
/* eslint-disable @next/next/link-passhref */
import { GetServerSideProps } from "next";
import Head from "next/head";
import { sanityClient, urlFor } from "../sanity";
import { Collection } from "../typings";
import { groq } from "next-sanity";
import Link from "next/link";

interface Props {
  collections: Collection[];
}

const Home = ({ collections }: Props) => {
  return (
    <div className='max-w-7xl mx-auto flex flex-col min-h-screen py-20 px-10 2xl:px-0'>
      <Head>
        <title>NFT Drop</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <h1 className='w-52 cursor-pointer text-xl font-extralight sm:w-80 mb-10 '>
        <span className='font-extrabold underline decoration-pink-600/50'>
          Yetu
        </span>{" "}
        NFT Marketplace
      </h1>
      <main className='bg-slate-100 p-10 shadow-xl shadow-rose-400/20'>
        <div className='grid space-x-3 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4'>
          {collections.map((collection) => (
            <Link href={`/nft/${collection.slug.current}`} key={collection._id}>
              <div className='flex flex-col items-center cursor-pointer transition-all duration-200 hover:scale-105'>
                <img
                  src={urlFor(collection.mainImage).url()}
                  alt='...'
                  className='h-96 w-60 rounded-2xl object-cover'
                />
                <div className=''>
                  <h2 className='text-3xl font-extrabold'>
                    {collection.title}
                  </h2>
                  <p className='mt-2 text-sm text-gray-400'>
                    {collection.description}
                  </p>
                </div>
              </div>
            </Link>
          ))}
        </div>
      </main>
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
  const query = groq`*[_type =="collection"]{
_id,
  title,
  address,
  description,
  nftCollectionName,
  mainImage{
  asset
},
previewImage{
  asset
},
slug{
  current
},
creator->{
  _id,
  name,
  address,
  slug{
  current
}
}
}`;
  const collections = await sanityClient.fetch(query);
  return {
    props: {
      collections,
    },
  };
};
